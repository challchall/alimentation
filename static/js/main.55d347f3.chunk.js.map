{"version":3,"sources":["assets/kooldoggo.jpg","question.js","App.js","reportWebVitals.js","index.js"],"names":["Question","useState","questionNb","setQuestionNb","dogRpc","setDogRpc","catRpc","setCatRpc","dogBe","setDogBe","catBe","setCatBe","dogWeight","setDogWeight","setCatWeight","idealcatWeight","setIdealCatWeight","sterilizedDog","setSterilizedDog","sterilizedCat","setSterilizedCat","interiorCat","setInteriorCat","dogHourWalk","setDogHourWalk","isLab","setIsLab","tempBe","selectDogWeight","event","target","value","handleDogRpc","Math","round","pow","console","log","handleCatRpc","class","src","kooldoggo","alt","onClick","setTimeout","bind","onChange","Array","map","e","i","style","height","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55d347f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kooldoggo.fe3c4c84.jpg\";","import React, { useState } from \"react\";\r\nimport kooldoggo from './assets/kooldoggo.jpg'\r\n\r\nexport const Question = () => {\r\n    const [questionNb, setQuestionNb] = useState(0)\r\n    const [dogRpc, setDogRpc] = useState(0.0);\r\n    const [catRpc, setCatRpc] = useState(0.0);\r\n    const [dogBe, setDogBe] = useState(0);\r\n    const [catBe, setCatBe] = useState(0);\r\n    // Doggo\r\n    // let isDog = 0;\r\n    let [dogWeight, setDogWeight] = useState(0);\r\n    let [catWeight, setCatWeight] = useState(0);\r\n    let [idealcatWeight, setIdealCatWeight] = useState(0);\r\n    let [sterilizedDog, setSterilizedDog] = useState(0);\r\n    let [sterilizedCat, setSterilizedCat] = useState(0);\r\n    let [interiorCat, setInteriorCat] = useState(0);\r\n    let [dogHourWalk, setDogHourWalk] = useState(0);\r\n    let [isLab, setIsLab] = useState(0);\r\n    let tempBe = 0;\r\n    const selectDogWeight = (event) => {\r\n        setDogWeight(event.target.value);\r\n    }\r\n\r\n    const selectCatWeight = (event) => {\r\n        setCatWeight(event.target.value);\r\n    }\r\n\r\n    const selectIdealCatWeight = (event) => {\r\n        setIdealCatWeight(event.target.value);\r\n    }\r\n\r\n    const handleDogRpc = () => {\r\n        if (isLab) {\r\n            if (dogHourWalk && !sterilizedDog) {\r\n                setDogRpc(81)\r\n            } else if (sterilizedDog && !dogHourWalk) {\r\n                setDogRpc(127)\r\n            } else {\r\n                setDogRpc(102)\r\n            }\r\n        } else {\r\n            if (dogWeight < 10) {\r\n                if (dogHourWalk && !sterilizedDog) {\r\n                    setDogRpc(55)\r\n                } else if (sterilizedDog && !dogHourWalk) {\r\n                    setDogRpc(86)\r\n                } else {\r\n                    setDogRpc(69)\r\n                }\r\n            } else if (dogWeight < 25) {\r\n                if (dogHourWalk && !sterilizedDog) {\r\n                    setDogRpc(60)\r\n                } else if (sterilizedDog && !dogHourWalk) {\r\n                    setDogRpc(94)\r\n                } else {\r\n                    setDogRpc(75)\r\n                }\r\n            } else {\r\n                if (dogHourWalk && !sterilizedDog) {\r\n                    setDogRpc(65)\r\n                } else if (sterilizedDog && !dogHourWalk) {\r\n                    setDogRpc(102)\r\n                } else {\r\n                    setDogRpc(81)\r\n                }\r\n            }\r\n        }\r\n        if (dogWeight < 10) {\r\n            tempBe = (Math.round(130 * Math.pow(dogWeight, 0.75)))\r\n        } else {\r\n            tempBe = (Math.round(130 * Math.pow(dogWeight, 0.67)))\r\n        }\r\n        if (sterilizedDog) {\r\n            console.log(tempBe)\r\n            tempBe = (Math.round(tempBe * 0.8))\r\n        }\r\n        if (isLab) {\r\n            tempBe = (Math.round(tempBe * 0.8))\r\n        }\r\n        if (dogHourWalk) {\r\n            tempBe = (Math.round(tempBe * 0.8))\r\n        }\r\n        setDogBe(tempBe)\r\n    }\r\n\r\n    const handleCatRpc = () => {\r\n        if (!sterilizedCat) {\r\n            setCatBe(70 * idealcatWeight)\r\n        } else if (!interiorCat) {\r\n            setCatBe(60 * idealcatWeight)\r\n        } else {\r\n            setCatBe(50 * idealcatWeight)\r\n        }\r\n        if (!interiorCat) {\r\n            setCatRpc(85)\r\n        } else {\r\n            setCatRpc(100)\r\n        }\r\n    }\r\n\r\n    if (questionNb === 0) {\r\n        return (\r\n            <div>\r\n                {/* <svg viewBox=\"30 15.9 139.812 170.075\">\r\n                    <g fill=\"#61DAFB\">\r\n                        <path d=\"M142.4 106.8c0-24.3-19.4-43.9-43.2-43.9S56 82.6 56 106.8c0 9.7 3.1 18.6 8.3 25.8l26.4 46.6c3.2 7.7 14 7.7 17.2 0l27.4-48c1-1.6 2-3.2 2.8-4.9l.4-.7h-.1c2.5-5.7 4-12.1 4-18.8zm-20.9 9.3c-.8 1.5-2 2.7-3.4 3.7-1 .7-2.2 1.2-3.4 1.5-.4.1-.9.2-1.3.2h-2c-1-.1-1.9-.3-2.8-.6-1.6-.4-3.1-1-4.7-1.4-1.3-.4-2.5-.7-3.8-.9-.9-.1-1.8-.2-2.7-.2-.7 0-1.4.1-2.2.2-1.4.2-2.8.6-4.2.9-1.5.4-2.9.7-4.4.9-.6.1-1.2.1-1.8.1h-.9c-.3 0-.6-.1-.8-.1-1.5-.2-2.9-.8-4.2-1.7-2.1-1.7-3.4-3.8-3.9-6.5-.2-1-.2-2-.1-3 .1-1.2.4-2.4.8-3.5.7-1.8 1.6-3.4 2.8-4.9.9-1.1 1.9-2.1 3-3 1-.8 2-1.8 2.9-2.8 1.1-1.3 2.1-2.6 3.1-4l2.7-3.6c.7-.9 1.5-1.7 2.3-2.5 1-.9 2.2-1.7 3.5-2.2 1-.4 2-.6 3.1-.5 1.2 0 2.4.2 3.5.5 1.8.5 3.3 1.4 4.5 2.7.9.9 1.6 1.9 2.3 3 .7 1.1 1.4 2.3 2.1 3.4.8 1.3 1.6 2.6 2.4 3.8.9 1.2 1.9 2.3 3 3.4 1.3 1.2 2.5 2.6 3.4 4.2.8 1.3 1.5 2.7 1.9 4.2.3 1.2.6 2.4.6 3.6 0 1.7-.4 3.4-1.3 5.1zm5.1-101c4.1.5 7.2 2.6 9.6 5.9 1.6 2.3 2.7 4.8 3.3 7.6.5 2.4.7 4.7.7 7.2-.1 4.4-1.2 8.7-3.1 12.7-1.3 2.8-3 5.3-5.2 7.4-1.9 1.9-4.1 3.4-6.6 4.4-1.8.7-3.6 1-5.5.9-3.3-.2-6.1-1.5-8.4-3.8-2-2-3.4-4.4-4.3-7-.7-1.9-1.1-3.8-1.3-5.7-.1-1.3-.2-2.7-.2-4 .1-3.2.7-6.3 1.7-9.3 1.1-3.2 2.6-6.1 4.7-8.8 1.8-2.2 3.8-4.1 6.3-5.5 1.8-1 3.7-1.7 5.8-1.9h2c.1.1.2 0 .3 0h.2c-.2-.2-.1-.2 0-.1zM169 67.9c0 .1-.1.2-.1.4-1 2.9-2.6 5.5-4.7 7.7-1.6 1.8-3.4 3.3-5.5 4.5-2.6 1.5-5.5 2.5-8.5 2.7-1.8.1-3.6-.1-5.4-.8-2.6-.9-4.5-2.6-5.9-5-1.1-2-1.6-4.1-1.7-6.4 0-2 .3-4 .9-5.9 1.4-4.2 3.9-7.7 7.2-10.5 1.1-1 2.4-1.8 3.7-2.5 2.7-1.4 5.5-2.3 8.5-2.4 1.7 0 3.4.2 5 .9 2.5 1 4.4 2.6 5.7 5 1.2 2.1 1.7 4.4 1.6 6.8 0 1.3-.2 2.6-.5 3.9 0 .1-.1.2-.1.4 0 .3-.1.7-.2 1.2zM30.6 66.6c0-.1-.1-.2-.1-.4-.3-1.3-.5-2.6-.5-3.9 0-2.4.4-4.7 1.6-6.8 1.3-2.3 3.2-4 5.7-5 1.6-.6 3.3-.9 5-.9 3.1.1 5.9.9 8.5 2.4 1.3.7 2.5 1.5 3.7 2.5 3.4 2.8 5.8 6.3 7.2 10.5.6 1.9 1 3.9.9 5.9 0 2.3-.5 4.4-1.7 6.4-1.4 2.4-3.4 4-5.9 5-1.7.6-3.5.9-5.4.8-3.1-.2-5.9-1.1-8.5-2.7-2.1-1.2-3.9-2.7-5.5-4.5-2-2.3-3.6-4.8-4.7-7.7 0-.1-.1-.2-.1-.4.1-.4 0-.8-.2-1.2zM74.8 15h1.8c.1.1.2 0 .3 0h.4c2.1.2 4 .9 5.8 1.9 2.5 1.4 4.5 3.3 6.3 5.5 2.1 2.6 3.6 5.6 4.7 8.8 1 3 1.6 6.1 1.7 9.3 0 1.3 0 2.7-.2 4-.2 2-.6 3.9-1.3 5.7-.9 2.7-2.3 5.1-4.3 7-2.4 2.3-5.1 3.7-8.4 3.8-1.9.1-3.7-.2-5.5-.9-2.5-1-4.7-2.5-6.6-4.4-2.2-2.2-3.9-4.7-5.2-7.4-1.9-4-2.9-8.2-3.1-12.7-.1-2.4.1-4.8.7-7.2.6-2.7 1.7-5.3 3.3-7.6 2.4-3.3 5.5-5.4 9.6-5.9-.2.1-.1.1 0 .1z\" />\r\n                    </g>\r\n                </svg> */}\r\n                <div class=\"topleft\">\r\n                    Dr. Guenegou Tiphaine\r\n                </div>\r\n                <div class=\"titlescreen\">\r\n                    <div class=\"title\">\r\n                        QUESTION ALIMENTATION\r\n                    </div>\r\n                    <img class=\"rounded-circle avatar-img\" src={kooldoggo} alt={kooldoggo} />\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <label>\r\n                            Je me pose des questions sur l'alimentation de mon animal :\r\n                        </label>\r\n                    </div>\r\n                    <button onClick={() => setQuestionNb(1)}> oui</button>\r\n                    <button onClick={() => setQuestionNb(24)}> non</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (questionNb === 24) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Comment avez-vous choisi son alimentation ?\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => setQuestionNb(26)}> Je me suis renseigné sur internet</button>\r\n                <button onClick={() => setQuestionNb(26)}> J'ai choisi en regardant le paquet en magasin</button>\r\n                <button onClick={() => setQuestionNb(25)}> Mon vétérinaire me l'a conseillé</button>\r\n                <button onClick={() => setQuestionNb(26)}> Un ami donne la même chose à son animal</button>\r\n                <button onClick={() => setQuestionNb(26)}> Autre raison</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 25) {\r\n        setTimeout(function () {\r\n            setQuestionNb(0)\r\n        }.bind(this), 1000)\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Merci de votre participation\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (questionNb === 26) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Et si on vérifiait ensemble que cette alimentation correspond aux besoin nutritionnels de votre animal ?\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => setQuestionNb(1)}> oui</button>\r\n                <button onClick={() => setQuestionNb(25)}> non</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (questionNb === 1) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon animal est un :\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => {\r\n                    // isDog = 1\r\n                    setQuestionNb(3)\r\n                }}> chien</button>\r\n                <button onClick={() => {\r\n                    // isDog = 0\r\n                    setQuestionNb(10)\r\n                }}> chat</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 3) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chien pèse :\r\n                    </label>\r\n                </div>\r\n                <select onChange={selectDogWeight}>\r\n                    {[...Array(46)].map((e, i) => {\r\n                        return <option value={i}>{i}</option>\r\n\r\n                    })}\r\n                </select>\r\n                <button onClick={() => {\r\n                    setQuestionNb(4)\r\n                }}> Valider</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (questionNb === 3) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chien pèse :\r\n                    </label>\r\n                </div>\r\n                <select onChange={selectDogWeight}>\r\n                    {[...Array(46)].map((e, i) => {\r\n                        return <option value={i}>{i}</option>\r\n\r\n                    })}\r\n                </select>\r\n                <button onClick={() => {\r\n                    setQuestionNb(4)\r\n                }}> Valider</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 4) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chien est stérilisé :\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => {\r\n                    setSterilizedDog(1)\r\n                    setQuestionNb(5)\r\n                }}> oui</button>\r\n                <button onClick={() => {\r\n                    setSterilizedDog(0)\r\n                    setQuestionNb(5)\r\n                }}> non</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 5) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chien marche plus de 4 heures par jour :\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => {\r\n                    setDogHourWalk(1)\r\n                    setQuestionNb(6)\r\n                }}> oui</button>\r\n                <button onClick={() => {\r\n                    setDogHourWalk(0)\r\n                    setQuestionNb(6)\r\n                }}> non</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 6) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chien est un Labrador, un Golden Retriever ou un Cocker :\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => {\r\n                    setIsLab(1)\r\n                    handleDogRpc()\r\n                    setQuestionNb(7)\r\n                }}> oui</button>\r\n                <button onClick={() => {\r\n                    setIsLab(0)\r\n                    handleDogRpc()\r\n                    setQuestionNb(7)\r\n                }}> non</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 7) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        <label>\r\n                            Le rapport protido-calorique (RPC) nécessaire à mon animal est de :\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"answer\">{dogRpc}</div>\r\n                    <div>Je choisi un aliment dont l'étiquette jaune correspond à ce RPC {\"\\n\"}</div>\r\n                </div>\r\n                <div>\r\n                    <hr\r\n                        style={{\r\n                            height: 0.5\r\n                        }}\r\n                    />\r\n                    <div>\r\n                        <label>\r\n                            L'aliment que je choisi devra donc apporter :\r\n                        </label>\r\n                    </div>\r\n                    <div> <div class=\"answer\">{dogBe} </div> grammes de proteines pour 1000 kcal de ration</div>\r\n                </div>\r\n                <button class=\"leaveButton\" onClick={() => {\r\n                    setQuestionNb(0)\r\n                }}> home</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    if (questionNb === 10) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chat pèse :\r\n                    </label>\r\n                </div>\r\n                <select onChange={selectCatWeight}>\r\n                    {[...Array(13)].map((e, i) => {\r\n                        return <option value={i}>{i}</option>\r\n\r\n                    })}\r\n                </select>\r\n                <button onClick={() => {\r\n                    setQuestionNb(19)\r\n                }}> Valider</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 19) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        je demande le poids idéal de mon animal à mon vétérinaire :\r\n                    </label>\r\n                </div>\r\n                <select onChange={selectIdealCatWeight}>\r\n                    {[...Array(10)].map((e, i) => {\r\n                        return <option value={i}>{i}</option>\r\n\r\n                    })}\r\n                </select>\r\n                <button onClick={() => {\r\n                    setQuestionNb(11)\r\n                }}> Valider</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 11) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chat est stérilisé :\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => {\r\n                    setSterilizedCat(1)\r\n                    setQuestionNb(12)\r\n                }}> oui</button>\r\n                <button onClick={() => {\r\n                    setSterilizedCat(0)\r\n                    setQuestionNb(12)\r\n                }}> non</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 12) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Mon chat  vit en intérieur :\r\n                    </label>\r\n                </div>\r\n                <button onClick={() => {\r\n                    setInteriorCat(1)\r\n                    handleCatRpc()\r\n                    setQuestionNb(13)\r\n                }}> oui</button>\r\n                <button onClick={() => {\r\n                    setInteriorCat(0)\r\n                    handleCatRpc()\r\n                    setQuestionNb(13)\r\n                }}> non</button>\r\n            </div>\r\n        )\r\n    }\r\n    if (questionNb === 13) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        <label>\r\n                            Le rapport protido-calorique (RPC) nécessaire à mon animal est de :\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"answer\"> &gt; {catRpc}</div>\r\n                    <div>Je choisi un aliment dont l'étiquette jaune correspond à ce RPC </div>\r\n                </div>\r\n                <div>\r\n                    <hr\r\n                        style={{\r\n                            height: 0.5\r\n                        }}\r\n                    />\r\n                    <div>\r\n                        <label>\r\n                            L'aliment que je choisi devra donc apporter :\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"answer\"> {catBe}\r\n                        </div> grammes de proteines pour 1000 kcal de ration</div>\r\n                </div>\r\n                <button class=\"leaveButton\" onClick={() => {\r\n                    setQuestionNb(0)\r\n                }}> home</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import './App.css';\nimport { Question } from './question';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <Question />\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}